{"version":3,"sources":["Components/MyNews/nonImage.png","Components/Home/logo.png","Components/Navigation/Navigation.js","Components/Login/Login.js","Components/Register/Register.js","Components/MyNews/OtherNews.js","Components/MyNews/MyNews.js","utils/DateConvertor.js","utils/ApiConvertor.js","Components/Weather/FiveDaysWeather.js","Components/SelectCities/SelectCities.js","Components/Weather/Weather.js","Components/Corona/Corona.js","Components/Home/Home.js","App.js","actions.js","constants.js","serviceWorker.js","reducers.js","store.js","index.js"],"names":["module","exports","Navigation","user","loginLink","Nav","Item","style","margin","to","fontSize","textDecoration","registerLink","MyNewsLink","homeLink","weatherLink","covidLink","isSignedIn","color","variant","activeKey","Login","props","onUsernameChange","event","input","target","value","setState","userName","onPasswordChange","password","onSubmitClick","preventDefault","fetch","method","headers","body","JSON","stringify","username","state","then","response","json","data","id","onLoginComplete","history","push","alert","onGuestBtnClick","this","onLoginStart","Form","Group","controlId","Label","Control","type","placeholder","onChange","Button","onClick","Component","Register","onNameChange","uname","onEmailChange","email","onCategoryChange","category","toLowerCase","rePassword","matchPasswords","onRePasswordChange","matchPasswordText","matchPassStyle","fontWeight","length","checkBox","severity","constraint","detail","onRegisterComplete","errorsText","className","padding","borderRadius","border","Text","as","multiple","Check","label","width","OtherNews","news","onLoginBtnClick","useState","show","setShow","index","setIndex","btext","setBtext","handleClose","handleShow","i","newsImage","nonImage","otherNews","newsArray","map","urlToImage","Card","key","Img","src","Body","Title","title","cursor","window","open","url","focus","Modal","onHide","size","animation","Header","closeButton","textAlign","author","alt","description","source","name","publishedAt","Footer","marginBlock","MyNews","_isMounted","onCloseToast","toastDisplay","onSelectCategory","selectedCategory","req","Request","newData","apiKey","catch","error","articles","Spinner","topNews","Carousel","Caption","Toast","onClose","href","defaultActiveKey","onSelect","Link","eventKey","disabled","getSpecificDay","date","Date","getDay","getIsDayOrNight","hour","getHours","getIconURL","icon","FiveDaysWeather","fetchFiveDaysArray","currentSelectedCityKey","res","dailyForeArr","DailyForecasts","icons","daysArr","shortDatesArr","minTempsArr","maxTempsArr","Night","Icon","Day","getDate","getMonth","minTemp","Temperature","Minimum","Value","maxTemp","Maximum","iconsByDay","days","shortDates","minTempsArray","maxTempsArray","prevProps","prevState","daysWeatherArr","marginTop","marginRight","SelectCities","promiseOptions","inputValue","Promise","resolve","setTimeout","filterCities","city","onSelectCity","selectedCityKey","baseURL","citiesArr","request","cities","filter","cityElem","Type","LocalizedName","Country","Key","country","console","log","includes","currentCity","cacheOptions","defaultOptions","defaultInputValue","loadOptions","geolocation","require","Weather","onRefreshClick","todayDate","toDateString","currTime","toLocaleTimeString","getCurrentPosition","err","position","lat","coords","latitude","lng","longitude","fetchCurrentTemperature","temp","Metric","WeatherText","WeatherIcon","iconURL","Corona","fetchCountry","obj","Countries","totalCases","TotalConfirmed","newCases","NewConfirmed","totalDeaths","TotalDeaths","newDeaths","NewDeaths","newRecorverd","NewRecovered","totalRecovered","TotalRecovered","global","Global","bg","text","Home","paddingTop","easings","easeOutExpo","logo","App","onLogOutClick","onConnection","Router","basename","process","exact","path","render","connect","localStorage","dispatch","payload","setUserName","setCategory","Boolean","location","hostname","match","intialState","persistConfig","storage","whitelist","rootReducer","combineReducers","action","Object","assign","persistReducer","logger","createLogger","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bfba4e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nonImage.1b3aafab.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.213bf5e2.png\";","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport {Link} from 'react-router-dom';\r\nconst Navigation = ({user}) =>{\r\n\t\r\n\tlet loginLink = <Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t\t\t<Link to = '/Login' style = {{fontSize : '1.2em',textDecoration:'none'}}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t            </Link>\r\n\t\t\t         </Nav.Item>\r\n\tlet registerLink = <Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t\t\t\t<Link to = '/Register' style = {{fontSize : '1.2em',textDecoration:'none'}}>\r\n\t\t\t\t\t\t\t\tRegister\r\n\t\t\t            \t</Link>\r\n\t\t\t            </Nav.Item>\r\n\tlet MyNewsLink = \"\"\r\n\tlet homeLink = <Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t\t\t<Link to = '/' style = {{fontSize : '1.2em',textDecoration:'none'}}>\r\n\t\t\t\t\t\tHOME\r\n\t\t\t            </Link>\r\n\t\t\t         </Nav.Item> \r\n\tlet weatherLink = \"\";\r\n\tlet covidLink = \"\";\r\n\tif (user.isSignedIn) {\r\n\t\tloginLink = \r\n\t\t\t<Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t\t\t\t<Link to = '/Login' style = {{fontSize : '1.2em',textDecoration:'none'}}>\r\n\t\t\t\t\t\t\tLogout\r\n\t\t\t\t           </Link>\r\n\t\t\t</Nav.Item>\r\n\t\tregisterLink = \"\";\r\n\t\tMyNewsLink = \r\n\t\t\t<Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t\t\t\t<Link to = '/MyNews' style = {{fontSize : '1.2em',textDecoration:'none'}}>\r\n\t\t\t\t\t\t\tMyNews\r\n\t\t\t\t           </Link>\r\n\t\t\t</Nav.Item>\r\n\t\thomeLink = \"\";\r\n\t\tweatherLink = \r\n\t\t<Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t\t\t<Link to = '/Weather' style = {{fontSize : '1.2em',textDecoration:'none' ,color:'gold'}}>\r\n\t\t\t\t\t\tWeather\r\n\t\t\t            </Link>\r\n\t\t</Nav.Item>\r\n\t\tcovidLink = \r\n\t\t\t\t<Nav.Item style = {{margin : 10}}>\r\n\t\t\t\t<Link to = '/Corona' style = {{fontSize : '1.2em',textDecoration:'none' ,color:'red'}}>\r\n\t\t\t\t\tCOVID-19\r\n\t\t\t\t</Link>\r\n\t\t</Nav.Item>\r\n\t}\r\n\treturn(\r\n\t\t\t\t <Nav\r\n\t\t\t\t \t\t variant=\"pills\"\r\n\t\t\t              activeKey=\"/home\"\r\n\r\n\t\t\t            >\r\n\t\t\t              \r\n\t\t\t                {homeLink}\r\n\t\t\t                {loginLink}\r\n\t\t\t              \t{registerLink}\r\n\t\t\t              \t{MyNewsLink}\r\n\t\t\t               \t{weatherLink}\r\n\t\t\t\t\t\t\t{covidLink}\r\n  \t\t\t</Nav>\r\n\r\n\r\n\t\t)\r\n}\r\nexport default Navigation;","import React , {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link }from 'react-router-dom';\r\nimport './Login.css';\r\nclass Login extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuserName : '',\r\n\t\t\tpassword : ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onLoginStart();\r\n\t}\r\n\tonUsernameChange = (event )=> {\r\n\t\tlet input = event.target.value;\r\n\t\tthis.setState({userName : input});\r\n\t}\r\n\tonPasswordChange = (event)=> {\r\n\t\tlet input = event.target.value;\r\n\t\tthis.setState({password : input});\r\n\t}\r\n\tonSubmitClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tfetch('https://pure-sands-27033.herokuapp.com/signin',{\r\n\t\t\tmethod : 'post',\r\n\t\t\theaders : {'Content-Type': 'application/json'},\r\n\t\t\tbody : JSON.stringify({\r\n\t\t\t\tusername: this.state.userName,\r\n\t\t\t\tpassword : this.state.password\r\n\t\t\t}) \r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\tif (data.id){ //if data is user\r\n\t\t\t\t// var url = new URL(\"http://localhost:3000/saveuser\"),\r\n\t\t\t\t// params = {username : data.username}\r\n\t\t\t\t// url.search = new URLSearchParams(params).toString();\r\n\t\t\t\t// fetch(url, {\r\n\t\t\t\t// \t  method: \"get\",\r\n\t\t\t\t// \t  headers: {\r\n\t\t\t\t// \t    'Accept': 'application/json',\r\n\t\t\t\t// \t    'Content-Type': 'application/json',\r\n\t\t\t\t// \t    'Cache': 'no-cache'\r\n\t\t\t\t// \t  },\r\n\t\t\t\t// \t  withCredentials: true\r\n\t\t\t\t// \t})\r\n\t\t\t\t// .then(response => console.log(response))\t\t\t\r\n\t\t\t\tthis.props.onLoginComplete(data);\r\n\t\t\t\tthis.props.history.push('/MyNews');\r\n\t\t\t}else { //data is error\r\n\t\t\t\talert(data);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\tonGuestBtnClick = ()=> {\r\n\t\t\t\tthis.props.onLoginComplete(\"guest\");\r\n\t\t\t\tthis.props.history.push('/MyNews');\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\t\r\n\t\t\treturn(\r\n\t\t\t\t<div id = \"loginContainer\">\r\n\t\t\t\t\t\t<Form id=\"loginForm\">\r\n\t\t\t\t\t\t\t<h1 id = \"loginTitle\">Login</h1>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t\t    <Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t    <Form.Control type=\"name\" placeholder=\"Enter name\" onChange = {event => this.onUsernameChange(event)} />\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t    <Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t    <Form.Control type=\"password\" placeholder=\"Password\"  onChange = {event => this.onPasswordChange(event)}/>\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formLink\">\r\n\t\t\t\t\t\t\t  \t<Link to = \"/Register\">Not a member? register here!</Link>\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t \t<Button id = \"guestBtn\" variant=\"dark\" onClick = {this.onGuestBtnClick}>\r\n\t\t\t\t\t\t\t\t\tEnter as Guest\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button id = \"signInBtn\" variant=\"primary\" type=\"submit\" onClick = {this.onSubmitClick}>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n}\r\nexport default Login;","import React , {Component} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Register extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tuserName : '',\r\n\t\t\temail : '',\r\n\t\t\tpassword : '',\r\n\t\t\trePassword : '',\r\n\t\t\tcheckBox : false,\r\n\t\t\tmatchPasswordText : '',\r\n\t\t\tmatchPassStyle: {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tonNameChange = (event)=> {\r\n\t\tvar uname = event.target.value;\r\n\t\tthis.setState({userName : uname})\r\n\t}\r\n\tonEmailChange = (event) => {\r\n\t\tvar email = event.target.value;\r\n\t\tthis.setState({email : email})\r\n\t}\r\n\tonCategoryChange = (event)=> {\r\n\t\tvar category = event.target.value.toLowerCase();\r\n\t\tthis.setState({category : category})\r\n\t}\r\n\tonPasswordChange = (event) => {\r\n\t\tvar password = event.target.value;\r\n\t\tthis.setState({password : password})\r\n\t\tvar rePassword = this.state.rePassword;\r\n\t\tthis.matchPasswords(password, rePassword)\r\n\t}\r\n\t\r\n\tonRePasswordChange = (event) => {\r\n\t\tvar rePassword = event.target.value;\r\n\t\tthis.setState({rePassword : rePassword});\r\n\t\tvar password = this.state.password;\r\n\t\tthis.matchPasswords(password, rePassword)\r\n\t}\r\n\tmatchPasswords = (password,rePassword) => {\r\n\t\tif (rePassword === password){\r\n\t\t\tthis.setState({matchPasswordText : \"Password and Re-Password does match\"});\r\n\t\t\tthis.setState({matchPassStyle : {\r\n\t\t\t\tcolor : 'green',\r\n\t\t\t\tfontWeight: 'bold'\r\n\t\t\t}})\r\n\t\t}else {\r\n\t\t\tthis.setState({matchPasswordText : \"Password and Re-Password doesn't match\"});\r\n\t\t\t\tthis.setState({matchPassStyle : {\r\n\t\t\t\tcolor : 'red',\r\n\t\t\t\tfontWeight: 'bold'\r\n\t\t\t}})\r\n\t\t}\r\n\t}\r\n\tonSubmitClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (this.state.userName.length>0 && this.state.email.length > 0 && this.state.category.length>0\r\n\t\t && this.state.password === this.state.rePassword && this.state.checkBox){\r\n\t\t\t \tfetch('https://pure-sands-27033.herokuapp.com/register',{\r\n\t\t\t\tmethod : 'post',\r\n\t\t\t\theaders : {'Content-Type': 'application/json'},\r\n\t\t\t\tbody : JSON.stringify({\r\n\t\t\t\t\temail: this.state.email.toLowerCase(),\r\n\t\t\t\t\tpassword : this.state.password,\r\n\t\t\t\t\tusername : this.state.userName,\r\n\t\t\t\t\tcategory : this.state.category\r\n\t\t\t\t}) \r\n\t\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tif(data.severity === 'ERROR'){\r\n\t\t\t\t\tif(data.constraint === \"users_username_key\")\r\n\t\t\t\t\t\talert(\"The username is exist\");\r\n\t\t\t\t\telse if (data.constraint === \"login_email_key\")\r\n\t\t\t\t\t\talert(\"The email is exist\");\r\n\t\t\t\t\telse alert (data.detail);\r\n\t\t\t\t}\r\n\t\t\t\telse { //data is an user\r\n\t\t\t\tthis.props.onRegisterComplete(data);\r\n\t\t\t\tthis.props.history.push('/MyNews')\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t}else {\r\n\t\t\tlet errorsText = '';\r\n\t\t\tif (this.state.userName.length === 0) errorsText +='Enter an valid name \\n';\r\n\t\t\tif (this.state.email.length === 0) errorsText += 'Enter an valid email \\n';\r\n\t\t\tif (!this.state.category) errorsText += 'Select a category \\n';\r\n\t\t\tif (!this.state.checkBox) errorsText += 'Accept the conditions & terms box \\n';\r\n\t\t\talert(errorsText)\r\n\t\t}\r\n\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t\t<div className=\"row align-items-center justify-content-center\">\r\n\t\t\t\t\t\t<Form style = {{padding: '30px' ,borderRadius : '3px',border : '1px solid #ccc', margin : '10px'}}>\r\n\t\t\t\t\t\t<h1>Register</h1>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formName\">\r\n\t\t\t\t\t\t\t    <Form.Label>Username</Form.Label>\r\n\t\t\t\t\t\t\t    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange = {this.onNameChange}/>\r\n\t\t\t\t\t\t\t    <Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t      Advice : what is your nickname ? add something ;)\r\n\t\t\t\t\t\t\t    </Form.Text>\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t\t    <Form.Label>Email address</Form.Label>\r\n\t\t\t\t\t\t\t    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange = {this.onEmailChange}  />\r\n\t\t\t\t\t\t\t    <Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t      We'll never share your email with anyone else.\r\n\t\t\t\t\t\t\t    </Form.Text>\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t      <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n\t\t\t\t\t\t\t\t    <Form.Label>Category</Form.Label>\r\n\t\t\t\t\t\t\t\t    <Form.Control as=\"select\" multiple onChange={this.onCategoryChange}>\r\n\t\t\t\t\t\t\t\t      <option>General</option>\r\n\t\t\t\t\t\t\t\t      <option>Sports</option>\r\n\t\t\t\t\t\t\t\t      <option>Entertainment</option>\r\n\t\t\t\t\t\t\t\t      <option>Technology</option>\r\n\t\t\t\t\t\t\t\t      <option>Business</option>\r\n\t\t\t\t\t\t\t\t    </Form.Control>\r\n\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t      It's your news! choose your specific category\r\n\t\t\t\t\t\t\t    </Form.Text>\r\n\t\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formPassword\">\r\n\t\t\t\t\t\t\t    <Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t    <Form.Control type=\"password\" placeholder=\"Password\" onChange = {this.onPasswordChange} />\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formRepatPassword\">\r\n\t\t\t\t\t\t\t    <Form.Label>Re-Password</Form.Label>\r\n\t\t\t\t\t\t\t    <Form.Control type=\"password\" placeholder=\"Password\" onChange = {this.onRePasswordChange} />\r\n\t\t\t\t\t\t\t     <Form.Text style = {this.state.matchPassStyle}className=\"text\">\r\n\t\t\t\t\t\t\t     \t{this.state.matchPasswordText}\r\n\t\t\t\t\t\t\t    </Form.Text>\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t  <Form.Group controlId=\"formBasicCheckbox\">\r\n\t\t\t\t\t\t\t    <Form.Check type=\"checkbox\" label=\"I have read all conditions & terms\" onClick = {()=>this.setState({\r\n\t\t\t\t\t\t\t    \tcheckBox : !this.state.checkBox\r\n\t\t\t\t\t\t\t    })} />\r\n\t\t\t\t\t\t\t  </Form.Group>\r\n\t\t\t\t\t\t\t  <Button style = {{width : '100%'}}variant=\"primary\" type=\"submit\" onClick = {this.onSubmitClick} >\r\n\t\t\t\t\t\t\t    Sign Up\r\n\t\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t}\r\n}\r\nexport default Register;","import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport nonImage from './nonImage.png'\r\nimport './OtherNews.css';\r\n\r\nfunction OtherNews ({news,isSignedIn,onLoginBtnClick}) {\r\n\tconst [show,setShow] = useState(false);\r\n\tconst [index,setIndex] = useState(0);\r\n\tconst [btext,setBtext] = useState(\"\");\r\n\tconst handleClose = () => setShow(false);\r\n\tconst handleShow = (i) => {\r\n\t\tsetIndex(i);\r\n\t\tsetShow(true);\r\n\t}\r\n\r\n\t\r\n\tlet newsImage = nonImage;\r\n\tvar otherNews = [];\r\n\tfor (let index = 5 ; index<news.length ; index++){\r\n\t\totherNews.push(news[index]);\r\n\t}\r\n\tconst newsArray = otherNews.map((user,i) => {\r\n\t\t\tif (otherNews[i].urlToImage) newsImage = otherNews[i].urlToImage;\r\n\t\t\treturn (\r\n\t\t\t\t<Card id = \"cardContainer\" key= {i}  >\r\n\t\t\t\t\t  <Card.Img id = 'cardImg' variant=\"top\" src={newsImage} />\r\n\t\t\t\t\t  <Card.Body>\r\n\t\t\t\t\t    <Card.Title id =\"cardTitle\">{otherNews[i].title}</Card.Title>\r\n\t\t\t\t\t\t{isSignedIn === true ?\r\n\t\t\t\t\t\t\t<div id = \"buttons\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" style = {{cursor:'pointer'}} onClick ={()=> handleShow(i)}>Summary</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"outline-success\" style = {{margin:'10px'}}\r\n\t\t\t\t\t\t\t\tonClick ={()=>window.open('https://api.whatsapp.com/send?text='+otherNews[i].url, '_blank').focus()}>\r\n\t\t\t\t\t\t\t\tShare via Whatsapp</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:<div id = \"buttons\">\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" style = {{cursor:'pointer'}} \r\n\t\t\t\t\t\t\tonClick ={()=>{setBtext(\"Full articles are available for registered friends only\")\r\n\t\t\t\t\t\t\t\thandleShow(i)}}>Summary</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outline-success\" style = {{margin:'10px'}}\r\n\t\t\t\t\t\t\tonClick ={()=>{setBtext(\"You can't share in guest mode\")\r\n\t\t\t\t\t\t\thandleShow(i)}}>\r\n\t\t\t\t\t\t\tShare via Whatsapp</Button>\r\n\t\t\t\t\t\t</div> }\r\n\t\t\t\t\t  </Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t);\r\n\t});\r\n\r\n\tif (otherNews[index].urlToImage) newsImage = otherNews[index].urlToImage;\r\n\telse newsImage = nonImage;\r\n\treturn (\r\n\t\t<div id = \"cardsModalContainer\" >\r\n\t\t\t{isSignedIn === true ? // modal for user\r\n\t\t\t<Modal id = \"modal\" show={show} onHide={handleClose} size = \"lg\" animation = 'true'>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title style = {{textAlign:'center'}}>{otherNews[index].title}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<h3 style ={{color:'gray',fontSize : '11px',textAlign:'right'}}>{otherNews[index].author}<br></br></h3>\r\n\t\t\t\t\t\t<img src = {newsImage} style = {{width: '100%'}} alt = 'YourNews'/>\r\n\t\t\t\t\t\t\t<p  style = {{textAlign:'center'}}>{otherNews[index].description}</p>\t\r\n\t\t\t\t\t\t\t<div style = {{color:'gray',fontSize : '11px'}}>{otherNews[index].source.name}<br></br>\r\n\t\t\t\t\t\t\t{otherNews[index].publishedAt}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={handleClose}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick ={()=>window.open(otherNews[index].url, '_blank').focus()} style = {{marginBlock:'10px'}}>\r\n\t\t\t\t\t\t\t\tTo article</Button>\r\n\t\t\t\t<Button variant=\"outline-success\"\r\n\t\t\t\t\t   \t  onClick ={()=>window.open('https://api.whatsapp.com/send?text='+otherNews[index].url, '_blank').focus()}>\r\n\t\t\t\t\t   \t  Share via Whatsapp</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t\t: // modal for guest\r\n\t\t\t<Modal show={show} onHide={handleClose}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>YourNews</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<p>{btext}</p>\r\n\t\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\"onClick = {handleClose}>Close</Button>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick = {()=>onLoginBtnClick(\"login\")}>Login</Button>\r\n\t\t\t\t\t\t<Button variant = \"dark\" onClick = {()=> onLoginBtnClick(\"register\")}>Register</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>}\r\n\r\n\t\t\t<div id = \"cardsContainer\">\r\n\t\t\t\t{newsArray}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default OtherNews;\r\n","import React , {Component} from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport OtherNews from './OtherNews';\r\nimport nonImage from './nonImage.png'\r\nimport './MyNews.css';\r\n\r\nclass MyNews extends Component {\r\n\t_isMounted = false;\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcategory: '',\r\n\t\t\tapiKey: 'abc72145994a45f19cd1781fe040f011',\r\n\t\t\turl : 'https://newsapi.org/v2/top-headlines?country=il&apiKey=abc72145994a45f19cd1781fe040f011&category=',\r\n\t\t\tdata : {},\r\n\t\t\ttoastDisplay : true\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tlet category = this.props.user.category;\r\n\t\tvar url = this.state.url + category;\r\n\t\tvar req = new Request(url);\r\n\t\tfetch(req)\r\n\t\t.then(response => response.json())\r\n\t\t.then(newData=>{\r\n\t\t\t\r\n\t\t\tif (this._isMounted){\r\n\t\t\t\tthis.setState({data : newData})\r\n\t\t\t}\r\n\t\t}).catch((error)=>{\r\n\t\t\talert(\"Server is too busy now \" );\r\n\t\t\tthis.props.history.push('/Corona')\r\n\t\t});\t\r\n\t}\r\n\tcomponentWillUnmount() {\r\n   \t\t this._isMounted = false;\r\n  \t}\r\n\tonCloseToast = () => {\r\n\t\tthis.setState({toastDisplay : false});\r\n\t}\r\n\tonSelectCategory = (selectedCategory)=> {\r\n\t\tvar url = this.state.url + selectedCategory;\r\n\t\tvar req = new Request(url);\r\n\t\tfetch(req).then(response => response.json())\r\n\t\t.then(newData=>{\r\n\t\t\tif (this._isMounted){\r\n\t\t\t\tthis.setState({data : newData})\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tonLoginBtnClick = (event) =>{\r\n\t\tif (event === 'login')\r\n\t\tthis.props.history.push(\"/Login\")\r\n\t\telse this.props.history.push(\"/Register\")\r\n\t}\r\n\trender() {\r\n\t\tif (!this.props.user.isSignedIn) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t\t}\r\n\t\tif (!this.state.data.articles) return <Spinner animation=\"border\" />;\r\n\r\n\t\t\tvar news = this.state.data.articles;\r\n\t\t\tlet newsImage = nonImage;\r\n\t\t\tvar topNews = [];\r\n\t\t\t\tfor (let index = 0 ; index<5 ; index++){\r\n\t\t\t\t\ttopNews.push(news[index]);\r\n\t\t\t\t}\r\n\t\t\tconst newsArray = topNews.map((user,i) => {\r\n\t\t\t\tlet newsImage = nonImage;\r\n\t\t\t\tif (topNews[i].urlToImage) newsImage = topNews[i].urlToImage;\r\n\t\t\t\treturn ( \r\n\t\t\t\t\t  <Carousel.Item onClick ={()=>window.open(news[i].url, '_blank').focus()} key = {i}>\r\n\t\t\t\t\t    <img\r\n\t\t\t\t\t      id = \"mainImg\"\r\n\t\t\t\t\t      src={newsImage}\r\n\t\t\t\t\t      alt=\"slide\"\r\n\t\t\t\t\t    />\r\n\r\n\t\t\t\t\t    <Carousel.Caption>\r\n\t\t\t\t\t      \t<h3 id = \"mainTitles\">{topNews[i].title}</h3>\r\n\t\t\t\t\t      \t<p id = \"mainDesc\">{topNews[i].description}</p>\r\n\t\t\t\t\t    </Carousel.Caption>\r\n\t\t\t\t\t  </Carousel.Item>\r\n\t\t\t\t\t);\r\n\t\t\t});\r\n\t\t//console.log(newsArray)\r\n\t\treturn (\r\n\t\t\t<div id = 'myNewsContainer'>\r\n\t\t\t\t<Toast id=\"toastDisplay\" show = {this.state.toastDisplay} onClose = {this.onCloseToast}>\r\n\t  \t\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t\t    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n\t\t\t\t\t\t    <strong className=\"mr-auto\">YourNews</strong>\r\n\t\t\t\t\t\t    <small>now</small>\r\n\t\t\t\t  \t\t</Toast.Header>\r\n\t\t\t\t\t\t  {this.props.user.isSignedIn === true ? <Toast.Body>Hello, {this.props.user.username} ! your'e logged in.</Toast.Body>\r\n\t\t\t\t\t\t  : <Toast.Body>Hello, {this.props.user.username} ! your'e in limited version.\r\n\t\t\t\t\t\t <br></br><a href = \"Login\"> Login now</a></Toast.Body>}\r\n\t\t\t\t\r\n\t\t\t\t</Toast>\r\n\t\t\t\t\t<Carousel id = \"mainArticles\" >\r\n\t\t\t\t\t\t  {newsArray}\r\n\t\t\t\t\t</Carousel>\r\n\r\n\t\t\t\t<div id = \"navContainer\" style = {{margin :'20px'}}>\r\n\t\t\t\t\t{this.props.user.isSignedIn === true ?\r\n\t\t\t\t\t<Nav id = \"navGroup\" variant=\"pills\" defaultActiveKey= {this.props.user.category}\r\n\t\t\t\t\t\tonSelect={this.onSelectCategory}>\r\n\t\t\t\t\t\t  <Nav.Item>\r\n\t\t\t\t\t\t    <Nav.Link eventKey=\"general\">General</Nav.Link>\r\n\t\t\t\t\t\t  </Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"sports\" >Sports</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"technology\">Technology</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"entertainment\">Entertainment</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"business\">Business</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item> \t\r\n\t\t\t\t\t</Nav> : (\r\n\t\t\t\t\t\t<Nav id = \"navGroup\" variant=\"pills\" defaultActiveKey= {this.props.user.category}\r\n\t\t\t\t\t\tonSelect={this.onSelectCategory}>\r\n\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"general\">General</Nav.Link>\r\n\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"sports\" disabled >Sports</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"technology\" disabled>Technology</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"entertainment\" disabled>Entertainment</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Item>\r\n\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"business\" disabled>Business</Nav.Link>\r\n\t\t\t\t\t\t\t</Nav.Item> \t\r\n\t\t\t\t\t</Nav>)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<OtherNews news = {this.state.data.articles} isSignedIn = {this.props.user.isSignedIn} onLoginBtnClick={this.onLoginBtnClick}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\r\n\t}\r\n}\r\nexport default MyNews;","export const getSpecificDay = date => {\r\n    var day = new Date(date).getDay();\r\n    switch(day) {\r\n        case 0 : return 'Sun';\r\n        case 1 : return 'Mon';\r\n        case 2 : return 'Tue';\r\n        case 3 : return 'Wed';\r\n        case 4 : return 'Thu';\r\n        case 5 : return 'Fri';\r\n        case 6 : return 'Sat';\r\n        default : return \"\";\r\n    }\r\n};\r\n\r\nexport const getShortDate = date => {\r\n    var day = new Date(date).getDate();\r\n    var month = new Date(date).getMonth() + 1;\r\n\r\n    return day+'/'+month;\r\n};\r\nexport const getIsDayOrNight = () => {\r\n    var hour = new Date().getHours();\r\n    if (hour>6 && hour<19)  return 'Day';\r\n    else return 'Night';\r\n}","//const apiKey = \"6OwPQ2hmTrq3buEVnQrF2UddMVhyYun2\";\r\nconst apiKey = \"V5FfcZrrJ0SQGbZSnLx3JSJZ0AuMWfng\";\r\nconst baseURL = \"https://dataservice.accuweather.com/\";\r\nconst baseForecast = \"forecasts/v1/daily/5day/\";\r\nconst baseCurrentConditions = \"currentconditions/v1/\"\r\nconst baseAutoComplete = \"locations/v1/cities/autocomplete\"\r\nconst baseByLocation = \"\";\r\n\r\nexport const getForecastURL = (currentCityKey) => {\r\n\r\n    return '';\r\n}\r\n\r\nexport const getIconURL = (icon) => {\r\n    if (icon<10) icon = \"0\"+ icon;\r\n    let iconURL = \"https://developer.accuweather.com/sites/default/files/\"+icon+\"-s.png\";\r\n    return iconURL;\r\n}\r\n\r\nexport const getAutoCompleteURL = (query) =>{\r\n    var url = baseURL+baseAutoComplete+\"?apikey=\"+apiKey+\"&q=\"+query;\r\n    return url;\r\n}","import React, {Component}   from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { getSpecificDay, getShortDate, getIsDayOrNight } from \"../../utils/DateConvertor\";\r\nimport { getIconURL } from \"../../utils/ApiConvertor\";\r\n\r\n\r\nclass FiveDaysWeather extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          days : [],\r\n          shortDates : [],\r\n          minTempsArray : [],\r\n          maxTempsArray : [],\r\n          iconsByDay : {} \r\n         };\r\n    }\r\n    componentDidMount(){\r\n        this.fetchFiveDaysArray();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n\t\tif (this.props.currentSelectedCityKey !== prevProps.currentSelectedCityKey) {\r\n\t\t  this.fetchFiveDaysArray();\r\n\t\t}\r\n\t  }\r\n    fetchFiveDaysArray = () =>{\r\n        var url = \"https://dataservice.accuweather.com/forecasts/v1/daily/5day/\"+\r\n        + this.props.currentSelectedCityKey+\"?apikey=\"+this.props.apiKey+\"&metric=true\"\r\n        var req = new Request(url);\r\n        fetch(req)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            let dailyForeArr = data.DailyForecasts;\r\n            let icons = [];\r\n            let daysArr = [];\r\n            let shortDatesArr =[];\r\n            let minTempsArr = [];\r\n            let maxTempsArr = [];\r\n            for (let i in dailyForeArr){\r\n                if (i === '0' && getIsDayOrNight() === 'Night') {\r\n                    icons.push(getIconURL(dailyForeArr[i].Night.Icon))\r\n                }else {\r\n                   icons.push(getIconURL(dailyForeArr[i].Day.Icon))\r\n                } \r\n                   // this.setState({days : this.state.days.push())});\r\n                   daysArr.push(getSpecificDay(dailyForeArr[i].Date));\r\n                    //this.setState({shortDates : this.state.shortDates.push(getShortDate(dailyForeArr[i].Date))});\r\n                    shortDatesArr.push(getShortDate(dailyForeArr[i].Date));\r\n                    let minTemp = dailyForeArr[i].Temperature.Minimum.Value;\r\n                    let maxTemp = dailyForeArr[i].Temperature.Maximum.Value;\r\n                    minTempsArr.push(minTemp);\r\n                    maxTempsArr.push(maxTemp);\r\n            }\r\n        \r\n            this.setState({iconsByDay : icons})\r\n            this.setState({days : daysArr})\r\n            this.setState({shortDates : shortDatesArr})\r\n            this.setState({minTempsArray : minTempsArr})\r\n            this.setState({maxTempsArray : maxTempsArr})\r\n        });\r\n    }\r\n    render() {\r\n        const daysWeatherArr = this.state.shortDates.map((user,i) => {\r\n                return  ( \r\n                <Card style={{ width: '12rem' , marginTop : '15px',marginRight : '10px'}} key ={i}>\r\n                    <Card.Header>\r\n                    <Card.Title>{this.state.days[i]}</Card.Title>\r\n                        {this.state.shortDates[i] }\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                    <img src = {this.state.iconsByDay[i]} alt = 'icon'></img>\r\n                    <div className = \"row justify-content-center\">\r\n                        <Card.Text style = {{color : '#ccc', marginRight : '3px'}}>\r\n                              {this.state.minTempsArray[i] + \"°\" }\r\n                        </Card.Text>\r\n                        <Card.Text style = {{color : 'gray'}}>\r\n                              {this.state.maxTempsArray[i] +\"°\"}\r\n                        </Card.Text>\r\n                    </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        );\r\n        return (\r\n            <div className = \"row justify-content-center\">\r\n              {daysWeatherArr}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FiveDaysWeather;","import React, {Component} from 'react';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { getAutoCompleteURL } from '../../utils/ApiConvertor';\r\nimport './SelectCities.css';\r\n\r\nclass SelectCities extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            selectedCityKey : ''\r\n         };\r\n    }\r\n    componentDidMount() {\r\n        \r\n    }\r\n   async filterCities (inputValue) {\r\n        const url = new Request (getAutoCompleteURL(inputValue))\r\n        let citiesArr = [];\r\n\r\n        if (inputValue.length !== 0){\r\n            try {\r\n                const request = await fetch(url);\r\n                const cities = await request.json();\r\n                citiesArr = cities.filter(cityElem => cityElem.Type ==='City')\r\n                .map(city =>({value :  city.LocalizedName , label :  city.LocalizedName+\" , \"+city.Country.LocalizedName ,key : city.Key ,country : city.Country.LocalizedName }));\r\n            } catch (error) {\r\n                console.log(\"server requests is limited\")\r\n            }\r\n            \r\n\r\n        }\r\n        \r\n        return citiesArr.filter(i => {\r\n            return i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n         }\r\n        );\r\n      };\r\n      \r\n    promiseOptions = inputValue =>\r\n        new Promise(resolve => {\r\n          setTimeout(() => {\r\n              resolve(this.filterCities(inputValue));\r\n          }, 1500);\r\n        });\r\n    onSelect =  city => {\r\n       this.props.onSelectCity(city);\r\n    }\r\n    render() {\r\n        if (!this.props.currentCity) return <h1>loading...</h1>\r\n        if (this.props.isSignedIn === true)\r\n        return ( \r\n            <div id = \"selectCityInput\">\r\n               <AsyncSelect id=\"selectBox\"\r\n                cacheOptions \r\n                defaultOptions\r\n                defaultInputValue = {this.props.currentCity}\r\n                loadOptions={this.promiseOptions}\r\n                onChange = {this.onSelect}\r\n                placeholder=\"Enter a city\" /> \r\n               </div>\r\n        );\r\n        else \r\n        return <div id = \"selectCityInput\">For multiple weather location options - login <a href = \"/Login\">here</a></div>\r\n    }\r\n}\r\n\r\nexport default SelectCities;","import React, {Component} from 'react';\r\nimport './Weather.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport FiveDaysWeather from './FiveDaysWeather';\r\nimport SelectCities from '../SelectCities/SelectCities';\r\nvar geolocation = require('geolocation');\r\n\r\nclass Weather extends Component {\r\n\t_isMounted = false;\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttodayDate : '',\r\n\t\t\tdescription : '',\r\n\t\t\tcity : '',\r\n\t\t\tcountry: '',\r\n\t\t\ttemp : '',\r\n\t\t\tcurrTime : '',\r\n\t\t\tapiKey : '6OwPQ2hmTrq3buEVnQrF2UddMVhyYun2',\r\n\t\t\tcurrentSelectedCityKey : '',\r\n\t\t\ticonURL : ''\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis._isMounted = true;\r\n\t\tthis.onRefreshClick();\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif (this.state.currentSelectedCityKey !== prevState.currentSelectedCityKey) {\r\n\t\t  this.fetchCurrentTemperature();\r\n\t\t}\r\n\t  }\r\n\tcomponentWillUnmount(){\r\n\t\tthis._isMounted = false;\r\n\t}\r\n\tonRefreshClick = () => {\r\n\t\tlet date = new Date();\r\n\t\tthis.setState({todayDate : date.toDateString()});\r\n\t\tthis.setState({currTime : date.toLocaleTimeString()})\r\n\t\t\r\n\t\t//get current poistion from user -> fetch details about the weather in that poistion\r\n\t\tgeolocation.getCurrentPosition((err, position) => {\r\n\t\t\t\t  if (err) throw err\r\n\t\t\t\t  else {\r\n\t\t\t\t  \tlet lat = position.coords.latitude;\r\n\t\t\t\t\tlet lng = position.coords.longitude;\r\n\t\t\t\t\tvar url = \"https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=\"\r\n\t\t\t\t\t+this.state.apiKey+\"&q=\"+lat+\",\"+lng;\r\n\t\t\t\t    var req = new Request(url);\r\n\t\t\t\t    fetch(req)\r\n\t\t\t\t    .then(response => response.json())\r\n\t\t\t\t    .then(data=> {\r\n\t\t\t\t    \tif (this._isMounted){\r\n\t\t\t\t\t\t\tthis.setState({currentSelectedCityKey : data.Key})\r\n\t\t\t\t\t\t\tthis.fetchCurrentTemperature();\r\n\t\t\t\t     \t\tthis.setState({city: data.LocalizedName});\r\n\t\t\t\t     \t\tthis.setState({country : data.Country.LocalizedName});\r\n\t\t\t\t     \t\t// this.setState({temp : data.main.temp + \"°\"});\r\n\t\t\t\t     \t\t}\r\n\t\t\t\t    \t});\r\n\t\t\t\t  \t}\r\n\t\t})\r\n\t}\r\n\tfetchCurrentTemperature = () => {\r\n\t\tvar url = \"https://dataservice.accuweather.com/currentconditions/v1/\"+\r\n\t\tthis.state.currentSelectedCityKey+\"?apikey=\"+this.state.apiKey+\"&metric=true\";\r\n\t\tvar req = new Request(url);\r\n\t\tfetch(req)\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\t;\r\n\t\t\tthis.setState({temp : data[0].Temperature.Metric.Value + \"°\"});\r\n\t\t\tthis.setState({description : data[0].WeatherText})\r\n\t\t\tlet icon = data[0].WeatherIcon;\r\n\t\t\tif (icon<10) icon = \"0\"+ icon;\r\n\t\t\tthis.setState({iconURL : \"https://developer.accuweather.com/sites/default/files/\"+icon+\"-s.png\"})\r\n\t\t})\r\n\t}\r\n\tonSelectCity = (city) => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentSelectedCityKey : city.key,\r\n\t\t\tcity : city.value,\r\n\t\t\tcountry : city.country\r\n\t\t});\r\n\t\t\r\n\t}\r\n    render() {\r\n    \tif (!this.props.user.isSignedIn) {\r\n\t\t\tthis.props.history.push('/Login');\r\n\t\t\t}\r\n\t\tif (!this.state.currTime || !this.state.currentSelectedCityKey) return <Spinner animation=\"border\" />;\r\n\t\t\treturn (\r\n\t\t\t\t\t<div id = \"weatherContainer\">\r\n\t\t\t\t\t\t<SelectCities currentCity = {this.state.city} onSelectCity={this.onSelectCity} isSignedIn = {this.props.user.isSignedIn}/>\r\n\t\t\t\t\t\t<div id = \"mainWeather\">\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t<h1 style = {{fontSize:55}}> {this.state.temp} </h1>\r\n\t\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t\t{this.state.description}\r\n\t\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title><div> \r\n\t\t\t\t\t\t\t\t\t<img src = {this.state.iconURL} alt = 'icon'/>\r\n\t\t\t\t\t\t\t\t</div>{this.state.city + ' , '+this.state.country}</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t{this.state.todayDate + ' | '+this.state.currTime}\r\n\t\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<FiveDaysWeather apiKey = {this.state.apiKey} currentSelectedCityKey = {this.state.currentSelectedCityKey}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n}\r\nexport default Weather;","import React , {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport './Corona.css';\r\n\r\nclass Corona extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            country : '',\r\n            totalDeaths : '',\r\n            newDeaths : '',\r\n            totalCases : '',\r\n            newCases : '',\r\n            totalRecovered : '',\r\n            newRecorverd : '',\r\n            global : ''\r\n         };\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.fetchCountry();\r\n    }\r\n    fetchCountry = () =>{\r\n        var url = \"https://api.covid19api.com/summary\";\r\n        var req = new Request(url)\r\n        fetch(req)\r\n        .then(res => res.json())\r\n        .then(data =>\r\n            {\r\n                let countries = data.Countries;\r\n                let obj = countries[81]\r\n                this.setState({\r\n                    country : obj.Country,\r\n                    totalCases : obj.TotalConfirmed ,\r\n                    newCases : obj.NewConfirmed,\r\n                    totalDeaths : obj.TotalDeaths,\r\n                    newDeaths : obj.NewDeaths,\r\n                    newRecorverd : obj.NewRecovered,\r\n                    totalRecovered : obj.TotalRecovered,\r\n                    global : data.Global\r\n                })\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            });\r\n    }\r\n    render() {\r\n        if(!this.state.country) return <Spinner animation = \"border\"></Spinner>\r\n        return (\r\n            <div id = \"mainCovid\">\r\n                <h1 id = \"countryTitle\">{this.state.country}</h1>\r\n                    <div id = \"stats\">\r\n                            <Card bg = \"dark\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight : 'bold'}}>Total cases</Card.Header>\r\n                                <Card.Body>{this.state.totalCases}</Card.Body>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>New cases</Card.Header>\r\n                                <Card.Body>{\r\n                                this.state.newCases > 0 ? '+'+this.state.newCases : 0}</Card.Body>\r\n                            </Card>\r\n                            <Card bg = \"danger\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight : 'bold'}}>Total deaths</Card.Header>\r\n                                <Card.Body>{this.state.totalDeaths}</Card.Body>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>New deaths</Card.Header>\r\n                                <Card.Body>{\r\n                                this.state.newDeaths > 0 ? '+'+this.state.newDeaths : 0}</Card.Body>\r\n                            </Card>\r\n                            <Card bg = \"success\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight : 'bold'}}>Total Recorverd</Card.Header>\r\n                                <Card.Body>{this.state.totalRecovered}</Card.Body>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>New Recorverd</Card.Header>\r\n                                <Card.Body>{\r\n                                this.state.newRecorverd > 0 ? '+'+this.state.newRecorverd : 0}</Card.Body>\r\n                            </Card>\r\n                            <Card bg = \"primary\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight:'bold'}}>Active cases</Card.Header>\r\n                                <Card.Body>{\r\n                                    this.state.totalCases - this.state.totalRecovered\r\n                                }</Card.Body>\r\n                            </Card>\r\n                           \r\n                    </div>\r\n                    <h1 id = \"countryTitle\">World</h1>\r\n                    <div id = \"stats\">\r\n                            <Card bg = \"dark\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight : 'bold'}}>Total cases</Card.Header>\r\n                                <Card.Body>{this.state.global.TotalConfirmed}</Card.Body>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>New cases</Card.Header>\r\n                                <Card.Body>{\r\n                                this.state.global.NewConfirmed > 0 ? '+'+ this.state.global.NewConfirmed : 0}</Card.Body>\r\n                            </Card>\r\n                            <Card bg = \"danger\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight : 'bold'}}>Total deaths</Card.Header>\r\n                                <Card.Body>{this.state.global.TotalDeaths}</Card.Body>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>New deaths</Card.Header>\r\n                                <Card.Body>{\r\n                                this.state.global.NewDeaths > 0 ? '+'+this.state.global.NewDeaths : 0}</Card.Body>\r\n                            </Card>\r\n                            <Card bg = \"success\" text = \"white\">\r\n                                <Card.Header style = {{fontWeight : 'bold'}}>Total Recorverd</Card.Header>\r\n                                <Card.Body>{this.state.global.TotalRecovered}</Card.Body>\r\n                            </Card>\r\n                            <Card>\r\n                                <Card.Header>New Recorverd</Card.Header>\r\n                                <Card.Body>{\r\n                                this.state.global.NewRecovered > 0 ? '+'+this.state.global.NewRecovered : 0}</Card.Body>\r\n                            </Card>\r\n                            <Card bg = \"primary\" text = \"white\">\r\n                                <Card.Header bg = \"primary\" text = \"white\" style = {{fontWeight:'bold'}}>Active cases</Card.Header>\r\n                                <Card.Body>{\r\n                                    this.state.global.TotalConfirmed - this.state.global.TotalRecovered\r\n                                }</Card.Body>\r\n                            </Card>\r\n                           \r\n                    </div>\r\n             </div>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Corona;","import React, {Component} from 'react';\r\nimport logo from './logo.png'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { easings } from 'react-animation';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// }\r\n\tcomponentDidMount(){\r\n\t\t\tsetTimeout(()=> {\r\n\t\t\t\tif (this.props.user.isSignedIn===true)\r\n\t\t\t\t\tthis.props.history.push('/MyNews')\r\n\t\t\t\telse \r\n\t\t\t\tthis.props.history.push('/Login')\r\n\t\t\t},2000)\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div id = \"logo\" className = 'ma4 mt0 tc br4'>\r\n\t \t\t\t<div> \r\n\t\t\t\t\t <img id =\"logoImg\" style = {{paddingTop:'5px',animation : `pop-in ${easings.easeOutExpo} 2000ms forwards`}}\r\n\t \t\t\t\t\t\t\talt = \"logo\" src = {logo}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Spinner animation=\"border\" />\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React , {Component} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter , Router, Route , Switch } from 'react-router-dom';\nimport Navigation from './Components/Navigation/Navigation';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Register/Register';\nimport MyNews from './Components/MyNews/MyNews';\nimport Weather from './Components/Weather/Weather'\nimport Corona from './Components/Corona/Corona'\nimport Home from './Components/Home/Home';\n\nimport { connect } from 'react-redux';\nimport { setIsSignedIn, setUserName, setCategory } from './actions';\n\nconst mapStateToProps = state => { //takes the state from localStorage of the persist\n  return {\n    isSignedIn : state.localStorage.isSignedIn,\n    username : state.localStorage.username ,\n    category : state.localStorage.category\n  }\n}\nconst mapDispatchToProps = (dispatch) => { //push the new state with dispatch(action(filed))\n  return {\n    onConnection :(event,username,category) => {\n     dispatch(setIsSignedIn(event))\n     dispatch(setUserName(username))\n     dispatch(setCategory(category))\n    }\n  }\n}\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = {\n      user : {\n        username : '',\n        category : ''\n      }\n    }\n  }\n\n  \n  onLogOutClick = ()=>{\n   // this.props.onConnection(false);\n  }\n  onLoginStart = ()=> {\n    this.props.onConnection(false,\"\",\"\");\n  }\n  onRegisterComplete = (data)=> {\n    this.props.onConnection(true,data.username,data.category);\n  }\n  onLoginComplete = (data)=> {\n    console.log(data)\n      if (data === \"guest\"){\n        this.props.onConnection(\"guest\",\"guest\",\"general\");\n      }else\n      this.props.onConnection(true,data.username,data.category);\n  }\n    render(){\n    return (\n      <BrowserRouter history = {Router} basename={process.env.PUBLIC_URL}>\n        \n          <div className=\"App\">\n            <Navigation onLogOutClick = {this.onLogOutClick} user = {this.props}/> \n            <Switch>\n              <Route exact path = '/' render = {(props)=> <Home user = {this.props} {...props}/>}/>\n\n              <Route exact path = '/Login' render = {(props)=>  <Login onLoginStart = {this.onLoginStart} onLoginComplete = {this.onLoginComplete} \n              user = {this.props} {...props}/>}/>\n\n              <Route exact path = '/Register' render = {(props)=>  <Register onRegisterComplete = {this.onRegisterComplete} \n              user = {this.props} {...props}/>}/>\n\n              <Route path = '/MyNews' render = {(props)=>  <MyNews \n              user = {this.props} {...props}/>}/>\n              \n              <Route exact path = '/Weather' render = {(props)=>  <Weather user = {this.props}{...props}/>}/>\n\n              <Route exact path = '/Corona' render = {(props)=>  <Corona user = {this.props}{...props}/>}/>\n            </Switch>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import {CHANGE_IS_SIGN_IN, CHANGE_USERNAME, CHANGE_CATEGORY} from './constants.js'\r\n\r\nexport const setIsSignedIn = (text) => ({\r\n    type : CHANGE_IS_SIGN_IN,\r\n    payload : text\r\n});\r\nexport const setUserName = (username) => ({\r\n    type : CHANGE_USERNAME,\r\n    payload : username \r\n});\r\nexport const setCategory = (category) => ({\r\n    type : CHANGE_CATEGORY,\r\n    payload : category\r\n})","export const CHANGE_IS_SIGN_IN = 'CHANGE_IS_SIGN_IN';\r\nexport const CHANGE_USERNAME = 'CHANGE_USERNAME';\r\nexport const CHANGE_CATEGORY = 'CHANGE_CATEGORY';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {CHANGE_IS_SIGN_IN , CHANGE_USERNAME, CHANGE_CATEGORY} from './constants.js';\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst intialState = {\r\n    isSignedIn : \"\",\r\n    username : '',\r\n    category : '',\r\n}\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\"localStorage\"] //name of the folder of persist storage\r\n  };\r\n\r\nexport const isSignedInReducer  = (state = intialState , action = {} ) => {\r\n    switch(action.type) {\r\n        case CHANGE_IS_SIGN_IN:\r\n           return Object.assign ({},state, {isSignedIn: action.payload});\r\n        case CHANGE_USERNAME :\r\n            return Object.assign ({},state, {username: action.payload});\r\n        case CHANGE_CATEGORY :\r\n            return  Object.assign ({},state, {category: action.payload});\r\n    default :\r\n        return state;\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    localStorage : isSignedInReducer});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import rootReducer  from \"./reducers\"\r\nimport { persistStore } from \"redux-persist\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\n\r\nconst logger = createLogger();\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(logger));\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {store,persistor}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createLogger } from 'redux-logger';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport {isSignedInReducer  } from './reducers';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store.js';\n\n\n//const logger = createLogger();\n//const store = createStore(isSignedInReducer,applyMiddleware(logger));\n//const store = createStore(isSignedInReducer);\nReactDOM.render(\n    <Provider store = {store}>\n        <PersistGate persistor = {persistor}>\n          <App/>\n        </PersistGate>\n    </Provider>, document.getElementById('root')); \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}